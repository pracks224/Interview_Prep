## Java 8 in Action Book Review Points :

1. Why Java is changing again? Java 1.1 in 1997 - Java 7 in 2011 - Java 8 2014. Java 8 is profound than any other releases.
2. In java 8 we can write code more concise mannner , small and better way of writing.
3. Also, one reason for change is hardware influence. Earlier version of Java /or vast majority of the java programs only uses
   one these cores only. Java 1.0 introduces thread,locks etc.
   Java 5 introduces thread pool ,Concurrent collections
   Java 7 introduces fork/join framewrok
   Java 8 -> fill it later
   Concise code and simpler use of multicore processor

4. What is BlockingQueue?

---

    Answer :
    • A BlockingQueue is a data structure in Java that provides thread-safe operations for storing and retrieving elements. It allows multiple threads to interact with the queue, and when the queue is empty, the retrieval operation blocks until an element becomes available, ensuring synchronization and coordination between threads.
    • Mainly used for producer and consumer problems
    • It does not accept null value if we add it.

2.  How can we create a synchronized collection from given collection?

---

    Answer :
    To create a synchronized collection from a given collection in Java, you can use the Collections.synchronized method. This method wraps the original collection with a synchronized wrapper, ensuring thread safety for concurrent access.
        // Creating a synchronized version of the collection
        List<String> synchronizedList = Collections.synchronizedList(originalList);

        // Now, the synchronizedList can be safely accessed by multiple threads concurrently
        // It will automatically handle synchronization for thread safety
    It uses synchronized blocks to ensure thread safety, which means only one thread can access the map at a time.
    While it provides thread safety, it may result in reduced performance when multiple threads frequently access the map simultaneously, as other threads will be blocked during those operations.

3. What are the different ways to create Synchronized Collections in Java ?

---

Answer :

ConcurrentHashMap,CopyOnWriteArrayList,CopyOnWriteArraySet,ConcurrentSkipListSet.
It provides fine-grained concurrency control without explicit synchronization.

    ConcurrentHashMap: It provides a concurrent implementation of a hash map, allowing multiple threads to read and write concurrently without blocking.

    CopyOnWriteArrayList: This list allows for safe concurrent access by creating a new copy of the list every time an element is modified, ensuring that modifications don't affect ongoing iterations.

    CopyOnWriteArraySet: Similar to CopyOnWriteArrayList, this set implementation ensures safe concurrent access by creating a new copy of the set for each modification.

    ConcurrentSkipListSet and ConcurrentSkipListMap: These are concurrent implementations of a skip list set and skip list map, respectively, offering better performance for concurrent access in sorted collections.

4. How ConcurrentHashMap works?

---

Answer :

     Using Segenebtation,Hashing,Lock striping,
